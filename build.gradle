plugins {
    id 'base'
    id 'java'
    id 'maven-publish'
    id 'net.neoforged.moddev' version "2.0.10-beta"
}

ext.ENV = System.getenv()

version = "1.1.2"
group = "qinomed"
base.archivesBaseName = "kubejsdelight"

neoForge {
    version = project.neoforge_version

    runs {
        configureEach {
            logLevel = org.slf4j.event.Level.INFO
        }

        client {
            client()

            if (ENV.MC_CLIENT_ARGS) {
                programArguments.addAll(ENV.MC_CLIENT_ARGS.split(' '))
            }

            jvmArguments.addAll("-XX:+IgnoreUnrecognizedVMOptions", "-XX:+AllowEnhancedClassRedefinition")
            gameDirectory = file 'run'
        }

        server {
            server()
            programArgument("--nogui")
            gameDirectory = file 'run_server'
        }
    }

    mods {
        kubejsdelight {
            sourceSet sourceSets.main
        }
    }
}

compileJava {
    options.encoding = "UTF-8"
    options.release.set(21)
}

java {
    sourceCompatibility = targetCompatibility = '21'
    withSourcesJar()
}

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        url "https://maven.neoforged.net/releases"
    }

    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
        content {
            includeGroup "org.parchmentmc.data"
        }
    }

    maven {
        url "https://maven.latvian.dev/releases"
        content {
            includeGroup "dev.latvian.mods"
            includeGroup "dev.latvian.apps"
        }
    }

    maven {
        url 'https://jitpack.io'
        content {
            includeGroup "com.github.rtyley"
        }
    }

    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    api("dev.latvian.mods:kubejs-neoforge:${project.kubejs_version}")

    implementation "curse.maven:farmers-delight-398521:6154807"
    implementation "curse.maven:jei-238222:5846880"
}

processResources {
    def toReplace = [
            "version"         : project.version,
            "kubejs_version"  : project.kubejs_version,
            "fd_version"      : project.fd_version,
    ]

    println("[Process Resources] Replacing properties in resources: " + toReplace)

    inputs.properties toReplace
    filesMatching("META-INF/neoforge.mods.toml") {
        expand toReplace
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "kubejsdelight",
                "Specification-Vendor"    : "QinomeD",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : "QinomeD",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

afterEvaluate {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "1000"
    }
}